"""Add is_pregnant to user_profiles

Revision ID: fdbc8253f65e
Revises: 7edf8b7c6af3
Create Date: 2025-04-11 00:22:52.544415

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'fdbc8253f65e'
down_revision: Union[str, None] = '7edf8b7c6af3'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('user_profiles', sa.Column('is_pregnant', sa.Boolean(), nullable=True))
    op.add_column('user_profiles', sa.Column('fitzpatrick_type', sa.Integer(), nullable=True))
    op.add_column('user_profiles', sa.Column('breakout_frequency', sa.String(), nullable=True))
    op.add_column('user_profiles', sa.Column('skin_texture', sa.JSON(), nullable=True))
    op.add_column('user_profiles', sa.Column('skin_redness', sa.String(), nullable=True))
    op.add_column('user_profiles', sa.Column('end_of_day_skin_feel', sa.String(), nullable=True))
    op.add_column('user_profiles', sa.Column('preferred_textures', sa.JSON(), nullable=True))
    op.add_column('user_profiles', sa.Column('preferred_routine_length', sa.String(), nullable=True))
    op.add_column('user_profiles', sa.Column('preferred_product_types', sa.JSON(), nullable=True))
    op.add_column('user_profiles', sa.Column('lifestyle_factors', sa.JSON(), nullable=True))
    op.add_column('user_profiles', sa.Column('ingredients_to_avoid', sa.Text(), nullable=True))
    op.add_column('user_profiles', sa.Column('brand_name', sa.String(), nullable=True))
    op.add_column('user_profiles', sa.Column('development_stage', sa.String(), nullable=True))
    op.add_column('user_profiles', sa.Column('product_category', sa.String(), nullable=True))
    op.add_column('user_profiles', sa.Column('target_demographic', sa.String(), nullable=True))
    op.add_column('user_profiles', sa.Column('sales_channels', sa.JSON(), nullable=True))
    op.add_column('user_profiles', sa.Column('target_texture', sa.String(), nullable=True))
    op.add_column('user_profiles', sa.Column('performance_goals', sa.JSON(), nullable=True))
    op.add_column('user_profiles', sa.Column('desired_certifications', sa.JSON(), nullable=True))
    op.add_column('user_profiles', sa.Column('regulatory_requirements', sa.String(), nullable=True))
    op.add_column('user_profiles', sa.Column('restricted_ingredients', sa.Text(), nullable=True))
    op.add_column('user_profiles', sa.Column('preferred_actives', sa.Text(), nullable=True))
    op.add_column('user_profiles', sa.Column('production_scale', sa.String(), nullable=True))
    op.add_column('user_profiles', sa.Column('price_positioning', sa.String(), nullable=True))
    op.add_column('user_profiles', sa.Column('competitor_brands', sa.Text(), nullable=True))
    op.add_column('user_profiles', sa.Column('brand_voice', sa.String(), nullable=True))
    op.add_column('user_profiles', sa.Column('product_inspirations', sa.Text(), nullable=True))
    op.drop_column('user_profiles', 'hair_concerns')
    op.drop_column('user_profiles', 'brand_info')
    op.drop_column('user_profiles', 'hair_type')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('user_profiles', sa.Column('hair_type', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('user_profiles', sa.Column('brand_info', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('user_profiles', sa.Column('hair_concerns', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.drop_column('user_profiles', 'product_inspirations')
    op.drop_column('user_profiles', 'brand_voice')
    op.drop_column('user_profiles', 'competitor_brands')
    op.drop_column('user_profiles', 'price_positioning')
    op.drop_column('user_profiles', 'production_scale')
    op.drop_column('user_profiles', 'preferred_actives')
    op.drop_column('user_profiles', 'restricted_ingredients')
    op.drop_column('user_profiles', 'regulatory_requirements')
    op.drop_column('user_profiles', 'desired_certifications')
    op.drop_column('user_profiles', 'performance_goals')
    op.drop_column('user_profiles', 'target_texture')
    op.drop_column('user_profiles', 'sales_channels')
    op.drop_column('user_profiles', 'target_demographic')
    op.drop_column('user_profiles', 'product_category')
    op.drop_column('user_profiles', 'development_stage')
    op.drop_column('user_profiles', 'brand_name')
    op.drop_column('user_profiles', 'ingredients_to_avoid')
    op.drop_column('user_profiles', 'lifestyle_factors')
    op.drop_column('user_profiles', 'preferred_product_types')
    op.drop_column('user_profiles', 'preferred_routine_length')
    op.drop_column('user_profiles', 'preferred_textures')
    op.drop_column('user_profiles', 'end_of_day_skin_feel')
    op.drop_column('user_profiles', 'skin_redness')
    op.drop_column('user_profiles', 'skin_texture')
    op.drop_column('user_profiles', 'breakout_frequency')
    op.drop_column('user_profiles', 'fitzpatrick_type')
    op.drop_column('user_profiles', 'is_pregnant')
    # ### end Alembic commands ###
